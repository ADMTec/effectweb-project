<?php
/**
 * Cetemaster Services
 * Effect Web 2 - MuOnline Suite Software
 *
 * Controller Applications
 * Last Update: 14/12/2012 - 16:32h
 * Author: $CTM['Erick-Master']
 *
 * Cetemaster Services, Limited
 * Copyright (c) 2010-2013. All Rights Reserved, 
 * www.cetemaster.com.br / www.cetemaster.com
*/

class CTM_Controller extends CTM_Command
{
	/**
	 *	Init Now
	 *
	 *	@return	void
	*/
	public static function initNow()
	{
		require_once(CTM_ROOT_PATH."cache/server_cache/db_php/core_sources/installation_info.php");

		$_SERVER['REQUEST_URI'] = str_replace("&ajaxLoadSet", "/&ajaxLoadSet", CTM_URLEngine::URIString());
		CTM_Controller::PHPErrors();
		CTM_LoadTime::startTime();
		
		date_default_timezone_set("America/Sao_Paulo");
		
		if($installation['is_installed'] == false)
		{
			if(CTM_ROOT_AREA == "admin")
			{
				header("Location: ".CTM_URLEngine::URLBase()."installer/?app=install");
				exit();
			}
			else
			{
				CTM_Error::kernelError("The board is not installed");
			}
		}
		elseif(EW_THIS_VERSION > str_pad($installation['current_version'], 5, 0, STR_PAD_RIGHT))
		{
			if(CTM_ROOT_AREA == "admin")
			{
				header("Location: ".CTM_URLEngine::URLBase()."installer/?app=upgrade");
				exit();
			}
			else
			{
				CTM_Error::kernelError("The board is in update process");
			}
		}

		CTM_Cookies::$cookiePath = COOKIE_PATH;
		CTM_Cookies::$cookieDomain = COOKIE_DOMAIN;
		
		CTM_Registry::init();
		CTM_Command::instance()->registry();
		CTM_Registry::fetchDriver()->settings['mssql']['hostname'] = MSSQL_HOSTNAME;
		CTM_Registry::fetchDriver()->settings['mssql']['hostport'] = MSSQL_HOSTPORT;
		CTM_Registry::fetchDriver()->settings['mssql']['username'] = MSSQL_USERNAME;
		CTM_Registry::fetchDriver()->settings['mssql']['password'] = MSSQL_PASSWORD;
		CTM_Registry::fetchDriver()->settings['mssql']['database'] = CTMEW_CORE;
		CTM_Registry::fetchDriver()->settings['mssql']['persistent'] = MSSQL_PERSISTENT;
		CTM_Registry::fetchDriver()->settings['mssql']['debug'] = in_array("mssql", explode(",", CTM_SQL_DEBUG_MODE));
		CTM_Registry::fetchDriver()->settings['mssql']['log_folder'] = "MSSQL";
		CTM_Registry::fetchDriver()->Connect("mssql");
		
		if(CTM_Command::instance()->settings['CRONJOB']['ENABLE'] == TRUE)
		{
			$CronJob = new CronJob();
			$CronJob->Start(CTM_Command::instance()->settings['CRONJOB']['DEBUG']);
			$CronJob->RunAllTasks();
			$CronJob->Finish();
		}
		
		Authentication::init();
		CTM_Controller::Setup();
		CTM_Dashboard::init();
		
		CTM_Registry::setSetup("application", CTM_Dashboard::$application);
		
		if(CTM_ROOT_AREA == "public")
		{
			print self::GetContent();
			print "\r\n<!-- Effect Web ".EW_PUBLIC_VERSION." / Powered by Erick-Master & Litlle / (c) 2012 -->";
		}
		else
		{
			CTM_ACPBoard::init(ACP_LOAD_MODULE);
		}
		exit();
	}
	/**
	 *	Update Kernel Cache
	 *
	 *	@param	string	Secure key
	 *	@param	string	Kernel key
	 *	@param	string	Kernel cache
	 *	@return	void
	*/
	public static function UpdateWebCache($s_key, $key, $value)
	{
		if($s_key == "effectwebkernelhash")
		{
			$fp = file(CTM_CACHE_PATH."server_cache/db_php/core_sources/kernel_info.php");
			$hex = "0x".str_pad(strtoupper(dechex(crc32("ew_k:".$key))), 8, 0, STR_PAD_LEFT);
			$h_value = "0x".strtoupper(bin2hex(md5("checksum:ew_kernel:".substr($hex, 2).":".(strlen($value) < 32 ? md5($value) : $value))));
			
			$next_date_line = false;
			$seted = false;
			$file = NULL;

			for($i = 0; $i < count($fp); $i++)
			{
				$_key = substr($fp[$i], 11, 10);

				if($_key == $hex)
				{
					$fp[$i] = "\$EW_KERNEL[".$hex."] = ".$h_value.";\n";
					$seted = true;
				}
				
				if(substr($fp[$i], 0, 11) == "\$EW_KERNEL[")
				{
					$file .= $fp[$i];
				}
			}

			if($seted == false)
			{
				$file .= "\r\n\$EW_KERNEL[".$hex."] = ".$h_value.";";
			}

			$new_file = "<?php\n";
			$new_file .= "/**\n";
			$new_file .= " * Generated by Effect Web Board\n";
			$new_file .= " * ".date("r")."\n";
			$new_file .= "*/\n\n";
			$new_file .= $file;

			$fp = fopen(CTM_CACHE_PATH."server_cache/db_php/core_sources/kernel_info.php", "wb");
			fwrite($fp, rtrim($new_file, "\n"));
			fclose($fp);
		}
	}
	/**
	 *	Write Debug Log
	 *
	 *	@param	string|array	Log string
	 *	@return	void
	*/
	public static function DebugLog($log)
	{
		if(CTM_SYSTEM_DEBUG == TRUE)
		{
			if(!file_exists(EW_LOG_PATH."Debug/"))
				mkdir(EW_LOG_PATH."Debug/");
				
			if(($fp = fopen(EW_LOG_PATH."Debug/".date("d-m-Y").EW_LOG_EXT, "a+")))
			{
				if(is_array($log) && count($log) > 0)
				{
					$_log = NULL;
					
					foreach($log as $string)
					{
						$_log .= "[".date("H:i:s")."] ".$string."\r\n";
					}
					
					$log = $_log;
				}
				else
				{
					$log = "[".date("H:i:s")."] ".$log."\r\n";
				}
				
				fwrite($fp, $log);
				fclose($fp);
			}
		}
	}
	/**
	 *	Private: Get Content
	 *
	 *	@return	string
	*/
	private static function GetContent()
	{
		if(LOADING_PAGE_AJAX == true)
		{
			if(loadIsAjax() == false)
			{
				CTM_Command::instance()->output->loadSkinCache("global", "headerTemplate", true);
				$subContent = CTM_Command::instance()->output->returnContent(false, "subContent");
				
				return CTM_Command::instance()->output->returnFullContent(array("{#TEMPLATE_CONTENT#}" => $subContent));
			}
			else
			{
				return CTM_Command::instance()->output->returnContent(false, "subContent");
			}
		}
		else
		{
			CTM_Command::instance()->output->loadSkinCache("global", "headerTemplate", true);
			$subContent = CTM_Command::instance()->output->returnContent(false, "subContent");
			
			return CTM_Command::instance()->output->returnFullContent(array("{#TEMPLATE_CONTENT#}" => $subContent));
		}
	}
	/**
	 *	Private: Setup Variables
	 *
	 *	@return	void
	*/
	private static function Setup()
	{
		if(CTM_ROOT_AREA == "public")
		{
			$template = CTM_Command::instance()->output->template;
			$publicDir = PUBLIC_DIRECTORY."/%s/".$template."/";
			
			CTM_Command::instance()->updateVars("public_directory", PUBLIC_DIRECTORY."/");
			CTM_Command::instance()->updateVars("admincp_directory", ADMINCP_DIRECTORY."/");
			
			CTM_Command::instance()->updateVars("style_dirs,skin_styles", sprintf($publicDir, "style_css"));
			CTM_Command::instance()->updateVars("style_dirs,skin_images", sprintf($publicDir, "style_images"));
			CTM_Command::instance()->updateVars("style_dirs,skin_res", sprintf($publicDir, "style_resources"));
			
			CTM_Command::instance()->updateVars("style_dirs,styles", PUBLIC_DIRECTORY."/style_css/");
			CTM_Command::instance()->updateVars("style_dirs,images", PUBLIC_DIRECTORY."/images/");
			CTM_Command::instance()->updateVars("style_dirs,js", PUBLIC_DIRECTORY."/javascripts/");
			
			CTM_Command::instance()->updateVars("board_host", CTM_URLEngine::URLHost());
			CTM_Command::instance()->updateVars("board_url", CTM_URLEngine::URLBase());
			CTM_Command::instance()->updateVars("path_url", CTM_URLEngine::URIString());
			
			CTM_Command::instance()->updateVars("language_js", EffectWebData::LANGUAGE_JS.CTM_Command::instance()->lang->language);
			
			define("SESSION_USER_LOGGED", Authentication::Check());
		}
	}
	/**
	 *	Private: PHP Errors
	 *
	 *	@return	void
	*/
	private static function PHPErrors()
	{
		if(CTM_SERVER_DEBUG == false)
			ini_set("display_errors", "Off");
				
		if(CTM_ERROR_CAPTURE == true)
		{
			if(!file_exists(EW_LOG_PATH."ServerError/"))
				mkdir(EW_LOG_PATH."ServerError");
				
			if(!function_exists("myErrorHandler"))
			{
				function myErrorHandler($errno, $errstr, $errfile, $errline)
				{
					if($errno == E_WARNING || $errno == E_PARSE || $errno == E_ERROR || $errno == E_DEPRECATED)
					{
						if($fp = fopen(EW_LOG_PATH."ServerError/".date("d-m-Y").EW_LOG_EXT, "a+"))
						{
							$write = "[".date("H:i:s")."] Error number: ".$errno."\r\n"
							. "[".date("H:i:s")."] Error string: ".strip_tags($errstr)."\r\n"
							. "[".date("H:i:s")."] Error line: ".$errline."\r\n"
							. "[".date("H:i:s")."] Error file: ".myDirectory($errfile)."\r\n"
							. substr($write, strlen($write - 2) != "\r\n" ? "\r\n" : NULL)
							. str_repeat("=", 90)."\r\n";
									
							fwrite($fp, $write);
							fclose($fp);
						}
					}
					elseif(CTM_DEVELOPER_MODE == TRUE && ($errno == E_STRICT || $errno == E_NOTICE))
					{
						if($fp = fopen(EW_LOG_PATH."DeveloperStricts/".date("d-m-Y").EW_LOG_EXT, "a+"))
						{
							$write = "[".date("H:i:s")."] Error number: ".$errno."\r\n"
							. "[".date("H:i:s")."] Error string: ".strip_tags($errstr)."\r\n"
							. "[".date("H:i:s")."] Error line: ".$errline."\r\n"
							. "[".date("H:i:s")."] Error file: ".myDirectory($errfile)."\r\n"
							. substr($write, strlen($write - 2) != "\r\n" ? "\r\n" : NULL)
							. str_repeat("=", 90)."\r\n";
									
							fwrite($fp, $write);
							fclose($fp);
						}
					}

					if(CTM_SERVER_DEBUG == true && ($errno != E_STRICT && $errno != E_NOTICE))
					{
						trigger_error($errstr, myUserErrorNumber($errno));
					}
				}
			}
				
			set_error_handler("myErrorHandler");
		}
	}
}
